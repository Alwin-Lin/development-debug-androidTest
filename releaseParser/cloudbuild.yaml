steps:

#
# Extract the cache
#
# The gradle build cache is stored as a tarball in Google Cloud Storage to
# make builds faster.
#
# After extracting the cache to the /build_cache directory, we need to supply
# that to gradle, and include the volume in steps that require the cache.

#
#
#
#


#
# Build the project
#

- name: 'gcr.io/contbuild-263903/android:29-ndk-r17b'
  id: build
  args: ["./gradlew", "uberJar"]
  env:
  - 'TERM=dumb'
  - 'JAVA_TOOL_OPTIONS="-Xmx3g"'
  - 'GRADLE_USER_HOME=/build_cache/.gradle'
  - 'GRADLE_OPTS="-Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.workers.max=32 -Dkotlin.incremental=false -Dorg.gradle.caching=true"'
  - 'BRANCH_NAME=$BRANCH_NAME'
  dir: 'releaseParserProj'

#
# Run test
#
- name: 'gcr.io/contbuild-263903/android:29-ndk-r17b-jre11'
  id: test
  args: ["./gradlew", "test"]
  env:
  - 'TERM=dumb'
  - 'JAVA_TOOL_OPTIONS="-Xmx3g"'
  - 'JAVA_HOME=/usr/lib/jvm/jdk-11'
  - 'GRADLE_USER_HOME=/build_cache/.gradle'
  - 'GRADLE_OPTS="-Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.workers.max=32 -Dkotlin.incremental=false -Dorg.gradle.caching=true"'
  - 'BRANCH_NAME=$BRANCH_NAME'
  dir: 'releaseParserProj'

#
# Save the Jar
#

- name: 'gcr.io/cloud-builders/gsutil'
  args: ['-q', 'cp', '-r', 'releaseParserProj/build/libs/releaseParser.jar', 'gs://parser-jar-artifacts']
  waitFor: ['test']

  
#
# Save the test results
#
- name: 'gcr.io/cloud-builders/gsutil'
  args: ['-q', 'cp', '-r', 'releaseParserProj/build/reports/tests/test/index.html', 'gs://parser-jar-artifacts']
  waitFor: ['test']

# Option
#
timeout: 1800s
